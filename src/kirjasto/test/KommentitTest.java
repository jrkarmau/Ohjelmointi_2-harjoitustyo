package kirjasto.test;
// Generated by ComTest BEGIN
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
import java.util.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.22 09:15:41 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KommentitTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta91 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta91() throws SailoException {    // Kommentit: 91
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom21 = new Kommentti(); kom21.taytaKommentinTiedot(2); 
    Kommentti kom11 = new Kommentti(); kom11.taytaKommentinTiedot(1); 
    Kommentti kom22 = new Kommentti(); kom22.taytaKommentinTiedot(2); 
    Kommentti kom12 = new Kommentti(); kom12.taytaKommentinTiedot(1); 
    Kommentti kom23 = new Kommentti(); kom23.taytaKommentinTiedot(2); 
    String tiedNimi = "testikommentit.dat"; 
    File ftied = new File(tiedNimi); 
    ftied.delete(); 
    try {
    kommentit.lueTiedostosta(tiedNimi); 
    fail("Kommentit: 103 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kommentit.lisaa(kom21); 
    kommentit.lisaa(kom11); 
    kommentit.lisaa(kom22); 
    kommentit.lisaa(kom12); 
    kommentit.lisaa(kom23); 
    kommentit.tallenna(); 
    kommentit = new Kommentit(); 
    kommentit.lueTiedostosta(tiedNimi); 
    ArrayList<Kommentti> koms = kommentit.annaKommentit(2); 
    Iterator<Kommentti> i = koms.iterator(); 
    assertEquals("From: Kommentit line: 114", kom21.toString(), i.next().toString()); 
    assertEquals("From: Kommentit line: 115", kom22.toString(), i.next().toString()); 
    assertEquals("From: Kommentit line: 116", kom23.toString(), i.next().toString()); 
    assertEquals("From: Kommentit line: 117", false, i.hasNext()); 
    kommentit.lisaa(kom23); 
    kommentit.tallenna(); 
    assertEquals("From: Kommentit line: 120", true, ftied.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTallenna170 
   * @throws SailoException when error
   */
  @Test
  public void testTallenna170() throws SailoException {    // Kommentit: 170
    String tiedNimi = "testikirjasto.dat"; 
    File ftied = new File(tiedNimi); 
    ftied.delete(); 
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom21 = new Kommentti(); kom21.taytaKommentinTiedot(2); 
    Kommentti kom11 = new Kommentti(); kom11.taytaKommentinTiedot(1); 
    Kommentti kom22 = new Kommentti(); kom22.taytaKommentinTiedot(2); 
    Kommentti kom12 = new Kommentti(); kom12.taytaKommentinTiedot(1); 
    Kommentti kom23 = new Kommentti(); kom23.taytaKommentinTiedot(2); 
    kommentit.lisaa(kom21); 
    kommentit.lisaa(kom11); 
    kommentit.lisaa(kom22); 
    kommentit.lisaa(kom12); 
    kommentit.lisaa(kom23); 
    kommentit.tallenna(tiedNimi); 
    kommentit = new Kommentit(); 
    kommentit.lueTiedostosta(tiedNimi); 
    ArrayList<Kommentti> koms = kommentit.annaKommentit(2); 
    Iterator<Kommentti> i = koms.iterator(); 
    assertEquals("From: Kommentit line: 192", kom21.toString(), i.next().toString()); 
    assertEquals("From: Kommentit line: 193", kom22.toString(), i.next().toString()); 
    assertEquals("From: Kommentit line: 194", kom23.toString(), i.next().toString()); 
    assertEquals("From: Kommentit line: 195", false, i.hasNext()); 
    kommentit.lisaa(kom23); 
    ftied = new File(tiedNimi); 
    kommentit.tallenna(tiedNimi); 
    kommentit = new Kommentit(); 
    kommentit.lueTiedostosta(tiedNimi); 
    koms = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 202", 4, koms.size()); 
    assertEquals("From: Kommentit line: 203", true, ftied.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKommentit235 */
  @Test
  public void testAnnaKommentit235() {    // Kommentit: 235
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom11 = new Kommentti(2); kommentit.lisaa(kom11); 
    Kommentti kom22 = new Kommentti(1); kommentit.lisaa(kom22); 
    Kommentti kom33 = new Kommentti(2); kommentit.lisaa(kom33); 
    Kommentti kom44 = new Kommentti(1); kommentit.lisaa(kom44); 
    Kommentti kom55 = new Kommentti(2); kommentit.lisaa(kom55); 
    Kommentti kom66 = new Kommentti(5); kommentit.lisaa(kom66); 
    List<Kommentti> loytyneet; 
    loytyneet = kommentit.annaKommentit(3); 
    assertEquals("From: Kommentit line: 246", 0, loytyneet.size()); 
    loytyneet = kommentit.annaKommentit(1); 
    assertEquals("From: Kommentit line: 248", 2, loytyneet.size()); 
    assertEquals("From: Kommentit line: 249", true, loytyneet.get(0) == kom22); 
    assertEquals("From: Kommentit line: 250", true, loytyneet.get(1) == kom44); 
    loytyneet = kommentit.annaKommentit(5); 
    assertEquals("From: Kommentit line: 252", 1, loytyneet.size()); 
    assertEquals("From: Kommentit line: 253", true, loytyneet.get(0) == kom66); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa270 */
  @Test
  public void testLisaa270() {    // Kommentit: 270
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom11 = new Kommentti(2); kommentit.lisaa(kom11); 
    Kommentti kom22 = new Kommentti(1); kommentit.lisaa(kom22); 
    Kommentti kom33 = new Kommentti(2); kommentit.lisaa(kom33); 
    Kommentti kom44 = new Kommentti(1); kommentit.lisaa(kom44); 
    Kommentti kom55 = new Kommentti(2); kommentit.lisaa(kom55); 
    Kommentti kom66 = new Kommentti(5); kommentit.lisaa(kom66); 
    List<Kommentti> loytyneet; 
    loytyneet = kommentit.annaKommentit(3); 
    assertEquals("From: Kommentit line: 281", 0, loytyneet.size()); 
    loytyneet = kommentit.annaKommentit(1); 
    assertEquals("From: Kommentit line: 283", 2, loytyneet.size()); 
    assertEquals("From: Kommentit line: 284", true, loytyneet.get(0) == kom22); 
    assertEquals("From: Kommentit line: 285", true, loytyneet.get(1) == kom44); 
    loytyneet = kommentit.annaKommentit(5); 
    assertEquals("From: Kommentit line: 287", 1, loytyneet.size()); 
    assertEquals("From: Kommentit line: 288", true, loytyneet.get(0) == kom66); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaa309 */
  @Test
  public void testKorvaaTaiLisaa309() {    // Kommentit: 309
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom11 = new Kommentti(2); kommentit.lisaa(kom11); 
    Kommentti kom22 = new Kommentti(2); kommentit.lisaa(kom22); 
    kom11.parse("1  | 2 |  testi1  |  tekstiä1  "); 
    kom22.parse("2  | 2 |  testi2  |  tekstiä2  "); 
    Kommentti kom33 = new Kommentti(2); 
    kom33.parse("3  | 2 |  testi3  |  tekstiä3  "); 
    Kommentti kom44 = new Kommentti(2); 
    kom44.parse("1  | 2 |  testi4  |  tekstiä4  "); 
    List<Kommentti> loytyneet; 
    loytyneet = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 321", "testi1", loytyneet.get(0).getOtsikko()); 
    kommentit.korvaaTaiLisaa(kom33); 
    loytyneet = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 324", 3, loytyneet.size()); 
    kommentit.korvaaTaiLisaa(kom44); 
    loytyneet = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 327", "testi4", loytyneet.get(0).getOtsikko()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaKirjanKommentit349 */
  @Test
  public void testPoistaKirjanKommentit349() {    // Kommentit: 349
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom11 = new Kommentti(2); kommentit.lisaa(kom11); 
    Kommentti kom22 = new Kommentti(1); kommentit.lisaa(kom22); 
    Kommentti kom33 = new Kommentti(2); kommentit.lisaa(kom33); 
    Kommentti kom44 = new Kommentti(1); kommentit.lisaa(kom44); 
    Kommentti kom55 = new Kommentti(2); kommentit.lisaa(kom55); 
    Kommentti kom66 = new Kommentti(5); kommentit.lisaa(kom66); 
    List<Kommentti> loytyneet; 
    loytyneet = kommentit.annaKommentit(1); 
    assertEquals("From: Kommentit line: 360", 2, loytyneet.size()); 
    kommentit.poistaKirjanKommentit(1); 
    loytyneet = kommentit.annaKommentit(1); 
    assertEquals("From: Kommentit line: 363", 0, loytyneet.size()); 
    loytyneet = kommentit.annaKommentit(5); 
    assertEquals("From: Kommentit line: 365", 1, loytyneet.size()); 
    kommentit.poistaKirjanKommentit(5); 
    loytyneet = kommentit.annaKommentit(5); 
    assertEquals("From: Kommentit line: 368", 0, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaKommentti389 */
  @Test
  public void testPoistaKommentti389() {    // Kommentit: 389
    Kommentit kommentit = new Kommentit(); 
    Kommentti kom11 = new Kommentti(2); kommentit.lisaa(kom11); 
    Kommentti kom22 = new Kommentti(1); kommentit.lisaa(kom22); 
    Kommentti kom33 = new Kommentti(2); kommentit.lisaa(kom33); 
    kom11.parse("4  | 2 |  otsikko2  |  tekstiätekstiä  "); 
    kom22.parse("5  | 2 |  otsikko21  |  tekstiätekstiä  "); 
    kom33.parse("3  | 2 |  otsikko212  |  tekstiätekstiä  "); 
    List<Kommentti> loytyneet; 
    loytyneet = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 400", 3, loytyneet.size()); 
    kommentit.poistaKommentti(5); 
    loytyneet = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 403", 2, loytyneet.size()); 
    kommentit.poistaKommentti(4); 
    loytyneet = kommentit.annaKommentit(2); 
    assertEquals("From: Kommentit line: 406", 1, loytyneet.size()); 
  } // Generated by ComTest END
}